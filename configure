#!/bin/bash
# MAS
# Multiplexer Adminstrator Solution
# Configuration file
# License: GPL v2 or later
# Author: Aurelien DESBRIERES - aurelien@hackers.camp

tput clear

printf "\033[1;32mWelcome to MAS - Multiplexer Adminstrator Solution\033[0m\n"
printf "\033[1;32mThis program will install needed dependencies\033[0m\n"

printf "\033[1;32mPlease report your needs to:\033[0m aurelien@hackers.camp\n"
printf "\033[1;32mYou need root privileges to run it\033[0m\n"

the_user=`whoami`

# request the user approbation
while true; do
    read -p "Do you wish to install MAS $the_user? Y/n " yn
    case $yn in
	[Yy]* ) break;;
	[Nn]* ) exit;;
	* ) echo "Please answer Yes or no.";;
    esac
done

# Vefify and install the dependencies if needed
printf "\nThe software will now get the needed dependencies for your\noperating system $the_user\n"  

# load installation of the dependencies
# verification of the package manager
command_exists () {
    type "$1" &> /dev/null ;
}

# auto-selection of the package manager
# dnf - Fedora - fredora
if command_exists dnf ; then
    sudo dnf install mussh
else
    # yum - RedHat - old fredora
    sudo yum install mussh
fi
# apt - Debian - Trisquel
if command_exists apt-get ; then
    sudo apt-get install mussh
fi
# pacman - Archlinux - Parabola
if command_exists pacman ; then
    sudo pacman -Sy mussh
fi
# apt - Rooted smartphone
if command_exists apt ; then
    sudo apt install mussh
fi
 
dir_exist () {
    type "$2" &> /dev/null ;
}

if dir_exist /home/$the_user/MAS-REPORT ; then
    break
else
    mkdir /home/$the_user/MAS-REPORT/
fi

file_exist () {
    type "$3" &> /dev/null ;
}

if file_exist /home/$the_user/MAS-REPORT/mas-hostfile ; then
    break
else
    touch /home/$the_user/MAS-REPORT/mas-hostfile
fi

# Clear or not the host target file
while true; do
    read -p "Do you wish to clear your old host file or use it $the_user? C/u " cu
    case $cu in
	[Cc]* ) # Clear the target file
		printf "\nMAS will now clear your host list of remote machine\n\n"
		truncate -s 0 /home/$the_user/MAS-REPORT/mas-hostfile
		break;;
	[Uu]* ) break;;
	* ) echo "Please answer Clear or use.";;
    esac
done

# append or not new target in the target file
while true; do
    read -p "Do you wish to add target marchine $the_user? Y/n " yn
    case $yn in
	[Yy]* ) # adding remote machine to the list of hostfile
		printf "MAS will now create a host list of remote machine to analysis\n"
		printf "Enter one IP by line (ex:root@192.168.0.2) and hit Ctrl+d to finish\n"
		while
		      read line
		do
		    my_array=("${my_array[@]}" $line)
		done
		printf -- '%s\n ' "${my_array[@]}" | tee -a /home/$the_user/MAS-REPORT/mas-hostfile
		set -f /home/$the_user/MAS-REPORT/mas-hostfile
		break;;
	[Nn]* ) break;;
	* ) echo "Please answer Yes or no.";;
    esac
done


# append to the private key
while true; do
    read -p "Do you need to use a private key to connect on this cluster network? Y/n " yn
    case $yn in
	[Yy]* ) # adding a key
	    printf "\nHere is the list of your keys on this system $the_user\n"
	    ls -la /home/$the_user/.ssh/
	    printf "\nWrite the name of the private key you wish to use $the_user\n"
	    read private
	    break;;
	[Nn]* ) break;;
	* ) echo "Please answer Yes or no.";;
    esac
done


cp mas-hostfile mas update.sh ~/MAS-REPORT/

#cd /home/$the_user/MAS-REPORT/

chmod +x ~/MAS-REPORT/mas ~/MAS-REPORT/update.sh

echo "Loading MAS please wait"

# git clone or pull the file to be executed localy

# best should to use directly pssh
# pssh -h mas-hostfile -A -l aurelien -P -I<./update.sh

#mussh -a -i /home/$the_user/.ssh/$private -d -H mas-hostfile -c 'rm -rf MAS ; git clone https://github.com/aurelien-git/MAS.git ; cd MAS ; chmod +x update.sh' -m2

#mussh -a -i /home/$the_user/.ssh/$private -d -H mas-hostfile -c 'cd MAS ; git pull ; chmod +x update.sh' -m2

sleep 5

. mas

mas
